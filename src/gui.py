
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Canvas, PhotoImage, Tk, Canvas, Entry, Text, Button, PhotoImage

from matplotlib.backend_bases import button_press_handler
from requests import get


def main():
    window = Tk()
    app = MyWindow(window)
    window.mainloop()


class MyWindow():
    
    def button_clicked(self):
        self.bool = True
    
    def get_bool(self):
        return self.bool
    def reset_bool(self):
        self.bool = False

    

    def input(self):
        self.file =self.entry_1.get()
        return self.file
    

    def relative_to_assets(self,path: str) -> Path:
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
        return ASSETS_PATH / Path(path)
    def __init__(self, window):
        self.bool = False
        self.file = ""
        self.window = window
       # self.window = Tk()

        self.window.geometry("571x438")
        self.window.configure(bg = "#FFFFFF")


        self.canvas = Canvas(
            window,
            bg = "#FFFFFF",
            height = 438,
            width = 571,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_rectangle(
            0.0,
            0.0,
            571.0,
            57.0,
            fill="#234088",
            outline="")

        self.canvas.create_text(
            247.0,
            20.0,
            anchor="nw",
            text="Le Torrent",
            fill="#FFFFFF",
            font=("Inter", 16 * -1)
        )

        self.image_image_1 = PhotoImage(
            file=self.relative_to_assets("image_1.png"))
        self.image_1 = self.canvas.create_image(
            292.0,
            152.0,
            image=self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=self.relative_to_assets("image_2.png"))
        self.image_2 = self.canvas.create_image(
            140.0,
            393.0,
            image=self.image_image_2
        )

        self.image_image_3 = PhotoImage(
            file=self.relative_to_assets("image_3.png"))
        self.image_3 = self.canvas.create_image(
            425.0,
            393.0,
            image=self.image_image_3
        )

        self.canvas.create_text(
            6.0,
            349.0,
            anchor="nw",
            text="Downloaded:",
            fill="#000000",
            font=("Inter", 12 * -1)
        )

        self.canvas.create_text(
            286.0,
            349.0,
            anchor="nw",
            text="Available:",
            fill="#000000",
            font=("Inter", 12 * -1)
        )

        self.entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_bg_1 = self.canvas.create_image(
            281.0,
            277.5,
            image=self.entry_image_1
        )
        self.entry_1 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        self.entry_1.place(
            x=225.0,
            y=261.0,
            width=112.0,
            height=31.0
        )

        self.canvas.create_text(
            209.0,
            242.0,
            anchor="nw",
            text="File Name",
            fill="#000000",
            font=("Inter", 14 * -1)
        )

        self.button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_1 = Button(
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command= self.button_clicked,
            relief="flat"
        )
        self.button_1.place(
            x=226.0,
            y=304.0,
            width=109.0,
            height=30.236724853515625
        )

        self.canvas.create_text(
            97.0,
            375.0,
            anchor="nw",
            text="File 1",
            fill="#000000",
            font=("Inter", 10 * -1)
        )

        self.canvas.create_text(
            370.0,
            375.0,
            anchor="nw",
            text="File 1",
            fill="#000000",
            font=("Inter", 10 * -1)
        )

        self.image_image_4 = PhotoImage(
            file=self.relative_to_assets("image_4.png"))
        self.image_4 = self.canvas.create_image(
            301.0,
            107.0,
            image=self.image_image_4
        )

        self.canvas.create_text(
            265.0,
            103.0,
            anchor="nw",
            text="progress:",
            fill="#000000",
            font=("Inter", 10 * -1)
        )

        self.canvas.create_text(
            326.0,
            103.0,
            anchor="nw",
            text="0%",
            fill="#000000",
            font=("Inter", 10 * -1)
        )

        self.canvas.create_text(
            443.0,
            103.0,
            anchor="nw",
            text="5",
            fill="#000000",
            font=("Inter", 10 * -1)
        )

        self.canvas.create_text(
            469.0,
            103.0,
            anchor="nw",
            text="5",
            fill="#000000",
            font=("Inter", 10 * -1)
        )

        self.canvas.create_text(
            133.0,
            103.0,
            anchor="nw",
            text="file",
            fill="#000000",
            font=("Inter", 10 * -1)
        )

        self.image_image_5 = PhotoImage(
            file=self.relative_to_assets("image_5.png"))
        self.image_5 = self.canvas.create_image(
            437.0,
            108.0,
            image=self.image_image_5
        )

        self.image_image_6 = PhotoImage(
            file=self.relative_to_assets("image_6.png"))
        self.image_6 = self.canvas.create_image(
            464.0,
            108.0,
            image=self.image_image_6
        )
        self.window.resizable(False, False)
    
if __name__ == "__main__":
    main()